Pro Tips for Customization:
For HTML Content:

javascript
// In the loadContent function:
const response = await fetch(url);
const html = await response.text();
contentContainer.innerHTML = html;
Adding Authentication:

javascript
// Modify the fetch call to include headers:
const response = await fetch(url, {
  headers: {
    'Authorization': 'Bearer your-token-here',
    'Content-Type': 'application/json'
  }
});


Real-World Ready Enhancements:

javascript
// Add these to your loadContent function:
// Cache control
const response = await fetch(url, {
  cache: 'no-cache' // or 'force-cache' for caching
});

// Timeout handling
const timeout = 8000; // 8 seconds
const controller = new AbortController();
const timeoutId = setTimeout(() => controller.abort(), timeout);

try {
  const response = await fetch(url, { signal: controller.signal });
  // ... handle response
} catch (error) {
  if (error.name === 'AbortError') {
    // Handle timeout specifically
    contentContainer.innerHTML = `<div class="error">Request timed out</div>`;
  }
} finally {
  clearTimeout(timeoutId);
}

